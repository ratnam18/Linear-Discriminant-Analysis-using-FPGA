-- -------------------------------------------------------------
-- 
-- File Name: R:\code4\codegen\LDA\hdlsrc\LDA_fixpt.vhd
-- Created: 2018-10-28 18:12:04
-- 
-- Generated by MATLAB 9.4, MATLAB Coder 4.0 and HDL Coder 3.12
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LDA_fixpt
-- Source Path: LDA_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.LDA_fixpt_pkg.ALL;

ENTITY LDA_fixpt IS
  PORT( w                                 :   OUT   std_logic_vector(0 TO 1)  -- ufix1 [2]
        );
END LDA_fixpt;


ARCHITECTURE rtl OF LDA_fixpt IS

  -- Constants
  CONSTANT M                              : std_logic_vector(0 TO 1023) := 
    ('0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0',
     '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
     '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1');  -- ufix1 [1024]
  CONSTANT C_divbyzero_p                  : unsigned(24 DOWNTO 0) := 
    to_unsigned(16#1FFFFFF#, 25);  -- ufix25
  CONSTANT c_divbyzero_p_0                : signed(37 DOWNTO 0) := 
    signed'("01111111111111111111111111111111111111");  -- sfix38
  CONSTANT C_divbyzero_n                  : signed(37 DOWNTO 0) := 
    signed'("10000000000000000000000000000000000000");  -- sfix38
  CONSTANT c_divbyzero_p_1_1              : unsigned(32 DOWNTO 0) := 
    unsigned'("111111111111111111111111111111111");  -- ufix33
  CONSTANT c_divbyzero_p_2                : signed(40 DOWNTO 0) := 
    signed'("01111111111111111111111111111111111111111");  -- sfix41
  CONSTANT c_divbyzero_n_0                : signed(40 DOWNTO 0) := 
    signed'("10000000000000000000000000000000000000000");  -- sfix41
  CONSTANT One                            : unsigned(24 DOWNTO 0) := 
    to_unsigned(16#1000000#, 25);  -- ufix25

BEGIN
  LDA_fixpt_1_output : PROCESS 
    VARIABLE s1 : vector_of_signed14(0 TO 3);
    VARIABLE C : vector_of_signed14(0 TO 3);
    VARIABLE t : vector_of_signed14(0 TO 1);
    VARIABLE s1_0 : vector_of_signed14(0 TO 3);
    VARIABLE c_0 : vector_of_signed14(0 TO 3);
    VARIABLE t_0 : vector_of_signed14(0 TO 1);
    VARIABLE k1 : unsigned(9 DOWNTO 0);
    VARIABLE X1 : vector_of_unsigned6(0 TO 2047);
    VARIABLE k2 : unsigned(9 DOWNTO 0);
    VARIABLE X2 : vector_of_unsigned6(0 TO 2047);
    VARIABLE row : unsigned(10 DOWNTO 0);
    VARIABLE u : vector_of_unsigned14(0 TO 1);
    VARIABLE tmp : unsigned(35 DOWNTO 0);
    VARIABLE u1 : vector_of_unsigned14(0 TO 1);
    VARIABLE row_0 : unsigned(10 DOWNTO 0);
    VARIABLE u_0 : vector_of_unsigned14(0 TO 1);
    VARIABLE tmp_0 : unsigned(35 DOWNTO 0);
    VARIABLE u2 : vector_of_unsigned14(0 TO 1);
    VARIABLE row_1 : unsigned(10 DOWNTO 0);
    VARIABLE s1_1 : vector_of_signed14(0 TO 3);
    VARIABLE b1 : unsigned(11 DOWNTO 0);
    VARIABLE c_1 : vector_of_signed50(0 TO 3);
    VARIABLE s1_2 : vector_of_unsigned14(0 TO 3);
    VARIABLE row_2 : unsigned(10 DOWNTO 0);
    VARIABLE s1_3 : vector_of_signed14(0 TO 3);
    VARIABLE b1_0 : unsigned(11 DOWNTO 0);
    VARIABLE c_2 : vector_of_signed50(0 TO 3);
    VARIABLE s2 : vector_of_unsigned14(0 TO 3);
    VARIABLE c_3 : vector_of_signed14(0 TO 3);
    VARIABLE sw : vector_of_unsigned14(0 TO 3);
    VARIABLE c_4 : vector_of_signed5(0 TO 1);
    VARIABLE Y : vector_of_signed14(0 TO 1);
    VARIABLE sb2 : vector_of_signed5(0 TO 1);
    VARIABLE c_5 : vector_of_signed14(0 TO 3);
    VARIABLE sb : vector_of_unsigned9(0 TO 3);
    VARIABLE A : vector_of_unsigned14(0 TO 3);
    VARIABLE a_0 : vector_of_unsigned14(0 TO 3);
    VARIABLE d : unsigned(13 DOWNTO 0);
    VARIABLE c_6 : vector_of_unsigned46(0 TO 3);
    VARIABLE swi : vector_of_unsigned14(0 TO 3);
    VARIABLE c_7 : vector_of_unsigned14(0 TO 3);
    VARIABLE b : signed(13 DOWNTO 0);
    VARIABLE a1 : signed(15 DOWNTO 0);
    VARIABLE d_0 : unsigned(13 DOWNTO 0);
    VARIABLE d_1 : unsigned(13 DOWNTO 0);
    VARIABLE tmp_1 : unsigned(13 DOWNTO 0);
    VARIABLE tmp_2 : std_logic;
    VARIABLE a_1 : vector_of_signed14(0 TO 3);
    VARIABLE tmp_3 : signed(13 DOWNTO 0);
    VARIABLE a_2 : vector_of_signed14(0 TO 3);
    VARIABLE tmp_4 : signed(13 DOWNTO 0);
    VARIABLE fmo_7 : std_logic_vector(0 TO 3);
    VARIABLE a_3 : vector_of_signed14(0 TO 3);
    VARIABLE tmp_5 : signed(13 DOWNTO 0);
    VARIABLE a_4 : vector_of_signed14(0 TO 3);
    VARIABLE tmp_6 : signed(13 DOWNTO 0);
    VARIABLE squar : std_logic;
    VARIABLE tmp_7 : std_logic;
    VARIABLE w1 : std_logic_vector(0 TO 1);
    VARIABLE i : unsigned(5 DOWNTO 0);
    VARIABLE tmp_8 : unsigned(9 DOWNTO 0);
    VARIABLE tmp_9 : unsigned(5 DOWNTO 0);
    VARIABLE k2_0 : unsigned(9 DOWNTO 0);
    VARIABLE i_1 : unsigned(5 DOWNTO 0);
    VARIABLE i_2 : unsigned(5 DOWNTO 0);
    VARIABLE tmp_10 : unsigned(5 DOWNTO 0);
    VARIABLE tmp_11 : unsigned(9 DOWNTO 0);
    VARIABLE k1_0 : unsigned(9 DOWNTO 0);
    VARIABLE i_4 : unsigned(5 DOWNTO 0);
    VARIABLE tmp_12 : unsigned(10 DOWNTO 0);
    VARIABLE j_1 : unsigned(1 DOWNTO 0);
    VARIABLE tmp_13 : unsigned(10 DOWNTO 0);
    VARIABLE j_3 : unsigned(1 DOWNTO 0);
    VARIABLE tmp_14 : unsigned(10 DOWNTO 0);
    VARIABLE j_5 : unsigned(1 DOWNTO 0);
    VARIABLE v : unsigned(1 DOWNTO 0);
    VARIABLE t_1 : vector_of_signed14(0 TO 1);
    VARIABLE i_7 : unsigned(1 DOWNTO 0);
    VARIABLE j_8 : unsigned(1 DOWNTO 0);
    VARIABLE c_8 : vector_of_signed14(0 TO 3);
    VARIABLE m_0 : vector_of_signed14(0 TO 3);
    VARIABLE i_9 : unsigned(1 DOWNTO 0);
    VARIABLE j_10 : unsigned(1 DOWNTO 0);
    VARIABLE s1_4 : vector_of_signed14(0 TO 3);
    VARIABLE v_0 : vector_of_signed14(0 TO 1);
    VARIABLE tmp_15 : signed(31 DOWNTO 0);
    VARIABLE tmp_16 : unsigned(10 DOWNTO 0);
    VARIABLE j_12 : unsigned(1 DOWNTO 0);
    VARIABLE v_1 : unsigned(1 DOWNTO 0);
    VARIABLE t_2 : vector_of_signed14(0 TO 1);
    VARIABLE i_12 : unsigned(1 DOWNTO 0);
    VARIABLE j_15 : unsigned(1 DOWNTO 0);
    VARIABLE c_9 : vector_of_signed14(0 TO 3);
    VARIABLE m_1 : vector_of_signed14(0 TO 3);
    VARIABLE i_14 : unsigned(1 DOWNTO 0);
    VARIABLE j_17 : unsigned(1 DOWNTO 0);
    VARIABLE s1_5 : vector_of_signed14(0 TO 3);
    VARIABLE v_2 : vector_of_signed14(0 TO 1);
    VARIABLE tmp_17 : signed(31 DOWNTO 0);
    VARIABLE i_17 : unsigned(1 DOWNTO 0);
    VARIABLE j_19 : unsigned(1 DOWNTO 0);
    VARIABLE i_19 : unsigned(1 DOWNTO 0);
    VARIABLE v_3 : unsigned(1 DOWNTO 0);
    VARIABLE i_21 : unsigned(1 DOWNTO 0);
    VARIABLE j_22 : unsigned(1 DOWNTO 0);
    VARIABLE tmp_18 : signed(31 DOWNTO 0);
    VARIABLE i_23 : unsigned(1 DOWNTO 0);
    VARIABLE j_24 : unsigned(1 DOWNTO 0);
    VARIABLE k : unsigned(1 DOWNTO 0);
    VARIABLE ytemp : unsigned(6 DOWNTO 0);
    VARIABLE y_0 : unsigned(6 DOWNTO 0);
    VARIABLE tmp_19 : signed(31 DOWNTO 0);
    VARIABLE c_10 : vector_of_signed42(0 TO 1);
    VARIABLE tmp_20 : signed(31 DOWNTO 0);
    VARIABLE c_11 : vector_of_signed42(0 TO 1);
    VARIABLE w_0 : std_logic_vector(0 TO 1);
    VARIABLE tmp_21 : signed(31 DOWNTO 0);
    VARIABLE c_12 : vector_of_signed42(0 TO 1);
    VARIABLE tmp_22 : signed(31 DOWNTO 0);
    VARIABLE c_13 : vector_of_signed42(0 TO 1);
    VARIABLE w_1 : std_logic_vector(0 TO 1);
    VARIABLE i_26 : unsigned(1 DOWNTO 0);
    VARIABLE i_28 : unsigned(1 DOWNTO 0);
    VARIABLE tmp_23 : unsigned(25 DOWNTO 0);
    VARIABLE div_temp : unsigned(24 DOWNTO 0);
    VARIABLE div_temp_0 : unsigned(24 DOWNTO 0);
    VARIABLE div_temp_1 : vector_of_signed41(0 TO 3);
    VARIABLE div_temp_2 : vector_of_signed41(0 TO 3);
    VARIABLE div_temp_3 : vector_of_unsigned33(0 TO 3);
    VARIABLE div_temp_4 : vector_of_signed38(0 TO 1);
    VARIABLE div_temp_5 : vector_of_signed38(0 TO 1);
    VARIABLE div_temp_6 : vector_of_signed38(0 TO 1);
    VARIABLE div_temp_7 : vector_of_signed38(0 TO 1);
    VARIABLE div_temp_8 : vector_of_unsigned25(0 TO 1);
    VARIABLE add_temp : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_0 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_1 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_2 : vector_of_signed32(0 TO 31);
    VARIABLE add_cast : vector_of_signed32(0 TO 31);
    VARIABLE sub_cast : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_3 : vector_of_signed32(0 TO 31);
    VARIABLE sub_cast_0 : vector_of_signed32(0 TO 31);
    VARIABLE add_cast_0 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_4 : vector_of_signed32(0 TO 31);
    VARIABLE sub_cast_1 : vector_of_unsigned6(0 TO 31);
    VARIABLE sub_cast_2 : vector_of_signed32(0 TO 31);
    VARIABLE add_cast_1 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_5 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_6 : vector_of_signed32(0 TO 1022);
    VARIABLE add_cast_2 : vector_of_signed32(0 TO 31);
    VARIABLE sub_cast_3 : vector_of_signed32(0 TO 31);
    VARIABLE cast : vector_of_signed32(0 TO 1022);
    VARIABLE sub_cast_4 : vector_of_signed32(0 TO 31);
    VARIABLE add_cast_3 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_7 : vector_of_signed32(0 TO 31);
    VARIABLE sub_cast_5 : vector_of_unsigned6(0 TO 31);
    VARIABLE sub_cast_6 : vector_of_signed32(0 TO 31);
    VARIABLE add_cast_4 : vector_of_signed32(0 TO 31);
    VARIABLE add_temp_8 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_7 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_5 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_8 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_9 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp : vector_of_unsigned50(0 TO 1);
    VARIABLE cast_0 : vector_of_unsigned14(0 TO 1);
    VARIABLE add_temp_9 : vector_of_signed32(0 TO 1022);
    VARIABLE cast_1 : vector_of_signed32(0 TO 1022);
    VARIABLE add_temp_10 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_10 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_6 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_11 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_12 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_0 : vector_of_unsigned50(0 TO 1);
    VARIABLE cast_2 : vector_of_unsigned14(0 TO 1);
    VARIABLE add_temp_11 : vector_of_signed32(0 TO 1022);
    VARIABLE cast_3 : vector_of_signed32(0 TO 1022);
    VARIABLE add_temp_12 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_13 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_7 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_14 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_15 : vector_of_signed18(0 TO 1);
    VARIABLE sub_cast_16 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_17 : vector_of_signed18(0 TO 1);
    VARIABLE sub_temp : vector_of_signed18(0 TO 1);
    VARIABLE cast_4 : vector_of_signed13(0 TO 3);
    VARIABLE slice_cast : vector_of_signed41(0 TO 3);
    VARIABLE slice_cast_0 : vector_of_signed13(0 TO 3);
    VARIABLE slice_cast_1 : vector_of_signed41(0 TO 3);
    VARIABLE cast_5 : vector_of_signed41(0 TO 3);
    VARIABLE cast_6 : vector_of_signed13(0 TO 3);
    VARIABLE sub_cast_18 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_19 : vector_of_signed32(0 TO 1);
    VARIABLE cast_7 : vector_of_signed14(0 TO 3);
    VARIABLE add_temp_13 : vector_of_signed32(0 TO 1022);
    VARIABLE add_temp_14 : vector_of_signed32(0 TO 1);
    VARIABLE cast_8 : vector_of_signed32(0 TO 1022);
    VARIABLE add_temp_15 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_16 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_8 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_20 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_17 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_9 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_21 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_10 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_22 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_23 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_24 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_1 : vector_of_signed28(0 TO 1);
    VARIABLE add_cast_11 : vector_of_signed29(0 TO 1);
    VARIABLE add_cast_12 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_25 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_13 : vector_of_signed29(0 TO 1);
    VARIABLE add_temp_18 : vector_of_signed29(0 TO 1);
    VARIABLE sub_cast_26 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_14 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_27 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_28 : vector_of_signed18(0 TO 1);
    VARIABLE sub_cast_29 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_30 : vector_of_signed18(0 TO 1);
    VARIABLE sub_temp_0 : vector_of_signed18(0 TO 1);
    VARIABLE sub_cast_31 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_32 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_19 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_20 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_15 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_33 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_16 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_34 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_17 : vector_of_signed23(0 TO 1);
    VARIABLE add_cast_18 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_35 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_19 : vector_of_signed23(0 TO 1);
    VARIABLE add_temp_21 : vector_of_signed23(0 TO 1);
    VARIABLE add_cast_20 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_36 : vector_of_signed32(0 TO 1);
    VARIABLE cast_9 : vector_of_signed13(0 TO 3);
    VARIABLE slice_cast_2 : vector_of_signed41(0 TO 3);
    VARIABLE slice_cast_3 : vector_of_signed13(0 TO 3);
    VARIABLE slice_cast_4 : vector_of_signed41(0 TO 3);
    VARIABLE cast_10 : vector_of_signed41(0 TO 3);
    VARIABLE cast_11 : vector_of_signed13(0 TO 3);
    VARIABLE add_temp_22 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_23 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_21 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_37 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_22 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_38 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_23 : vector_of_unsigned15(0 TO 1);
    VARIABLE add_cast_24 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_39 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_25 : vector_of_unsigned15(0 TO 1);
    VARIABLE add_temp_24 : vector_of_unsigned15(0 TO 1);
    VARIABLE cast_12 : vector_of_signed14(0 TO 3);
    VARIABLE add_temp_25 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_26 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_26 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_40 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_27 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_41 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_28 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_42 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_43 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_44 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_2 : vector_of_signed28(0 TO 1);
    VARIABLE add_cast_29 : vector_of_signed29(0 TO 1);
    VARIABLE add_cast_30 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_45 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_31 : vector_of_signed29(0 TO 1);
    VARIABLE add_temp_27 : vector_of_signed29(0 TO 1);
    VARIABLE add_temp_28 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_46 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_47 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_48 : vector_of_signed17(0 TO 1);
    VARIABLE sub_cast_49 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_50 : vector_of_signed17(0 TO 1);
    VARIABLE sub_temp_1 : vector_of_signed17(0 TO 1);
    VARIABLE add_temp_29 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_51 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_52 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_32 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_53 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_33 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_54 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_34 : vector_of_signed23(0 TO 1);
    VARIABLE add_cast_35 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_55 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_36 : vector_of_signed23(0 TO 1);
    VARIABLE add_temp_30 : vector_of_signed23(0 TO 1);
    VARIABLE add_temp_31 : vector_of_signed32(0 TO 1);
    VARIABLE add_temp_32 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_37 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_56 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_38 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_57 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_58 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_59 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_3 : vector_of_signed10(0 TO 1);
    VARIABLE add_cast_39 : vector_of_signed15(0 TO 1);
    VARIABLE add_cast_40 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_60 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_41 : vector_of_signed15(0 TO 1);
    VARIABLE add_temp_33 : vector_of_signed15(0 TO 1);
    VARIABLE cast_13 : unsigned(13 DOWNTO 0);
    VARIABLE cast_14 : signed(14 DOWNTO 0);
    VARIABLE cast_15 : signed(14 DOWNTO 0);
    VARIABLE cast_16 : signed(15 DOWNTO 0);
    VARIABLE cast_17 : signed(14 DOWNTO 0);
    VARIABLE cast_18 : signed(14 DOWNTO 0);
    VARIABLE cast_19 : signed(15 DOWNTO 0);
    VARIABLE mul_temp_4 : unsigned(27 DOWNTO 0);
    VARIABLE sub_cast_61 : unsigned(28 DOWNTO 0);
    VARIABLE cast_20 : signed(14 DOWNTO 0);
    VARIABLE cast_21 : signed(14 DOWNTO 0);
    VARIABLE cast_22 : signed(15 DOWNTO 0);
    VARIABLE cast_23 : unsigned(13 DOWNTO 0);
    VARIABLE cast_24 : signed(14 DOWNTO 0);
    VARIABLE cast_25 : signed(14 DOWNTO 0);
    VARIABLE cast_26 : signed(15 DOWNTO 0);
    VARIABLE cast_27 : unsigned(13 DOWNTO 0);
    VARIABLE mul_temp_5 : unsigned(27 DOWNTO 0);
    VARIABLE sub_cast_62 : unsigned(28 DOWNTO 0);
    VARIABLE sub_temp_2 : unsigned(28 DOWNTO 0);
    VARIABLE add_temp_34 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_42 : unsigned(14 DOWNTO 0);
    VARIABLE add_cast_43 : unsigned(14 DOWNTO 0);
    VARIABLE add_temp_35 : unsigned(14 DOWNTO 0);
    VARIABLE cast_28 : signed(15 DOWNTO 0);
    VARIABLE cast_29 : signed(15 DOWNTO 0);
    VARIABLE cast_30 : signed(16 DOWNTO 0);
    VARIABLE cast_31 : vector_of_unsigned33(0 TO 3);
    VARIABLE cast_32 : signed(14 DOWNTO 0);
    VARIABLE cast_33 : signed(14 DOWNTO 0);
    VARIABLE add_temp_36 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_6 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_63 : signed(29 DOWNTO 0);
    VARIABLE mul_temp_7 : unsigned(27 DOWNTO 0);
    VARIABLE sub_cast_64 : unsigned(28 DOWNTO 0);
    VARIABLE mul_temp_8 : unsigned(27 DOWNTO 0);
    VARIABLE sub_cast_65 : unsigned(28 DOWNTO 0);
    VARIABLE sub_temp_3 : unsigned(28 DOWNTO 0);
    VARIABLE cast_34 : std_logic;
    VARIABLE sub_cast_66 : signed(29 DOWNTO 0);
    VARIABLE cast_35 : unsigned(4 DOWNTO 0);
    VARIABLE sub_temp_4 : signed(29 DOWNTO 0);
    VARIABLE add_cast_44 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_67 : vector_of_signed32(0 TO 1);
    VARIABLE cast_36 : vector_of_unsigned14(0 TO 3);
    VARIABLE add_temp_37 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_45 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_68 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_46 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_69 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_47 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_70 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_9 : vector_of_unsigned23(0 TO 1);
    VARIABLE add_cast_48 : vector_of_unsigned24(0 TO 1);
    VARIABLE add_cast_49 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_71 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_50 : vector_of_unsigned24(0 TO 1);
    VARIABLE add_temp_38 : vector_of_unsigned24(0 TO 1);
    VARIABLE cast_37 : vector_of_unsigned8(0 TO 6);
    VARIABLE sll_temp : vector_of_unsigned7(0 TO 6);
    VARIABLE mul_temp_10 : vector_of_unsigned14(0 TO 6);
    VARIABLE cast_38 : signed(32 DOWNTO 0);
    VARIABLE cast_39 : signed(32 DOWNTO 0);
    VARIABLE cast_40 : unsigned(13 DOWNTO 0);
    VARIABLE cast_41 : signed(14 DOWNTO 0);
    VARIABLE cast_42 : signed(14 DOWNTO 0);
    VARIABLE sub_cast_72 : signed(15 DOWNTO 0);
    VARIABLE sub_cast_73 : signed(17 DOWNTO 0);
    VARIABLE sub_cast_74 : signed(17 DOWNTO 0);
    VARIABLE sub_temp_5 : signed(17 DOWNTO 0);
    VARIABLE cast_43 : signed(34 DOWNTO 0);
    VARIABLE cast_44 : signed(34 DOWNTO 0);
    VARIABLE cast_45 : signed(32 DOWNTO 0);
    VARIABLE cast_46 : signed(32 DOWNTO 0);
    VARIABLE cast_47 : signed(14 DOWNTO 0);
    VARIABLE cast_48 : signed(14 DOWNTO 0);
    VARIABLE add_cast_51 : signed(15 DOWNTO 0);
    VARIABLE add_cast_52 : signed(17 DOWNTO 0);
    VARIABLE add_cast_53 : signed(17 DOWNTO 0);
    VARIABLE add_temp_39 : signed(17 DOWNTO 0);
    VARIABLE cast_49 : signed(34 DOWNTO 0);
    VARIABLE cast_50 : signed(34 DOWNTO 0);
    VARIABLE sub_cast_75 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_76 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_6 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_77 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_78 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_7 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_79 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_80 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_8 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_81 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_82 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_9 : signed(16 DOWNTO 0);
    VARIABLE cast_51 : signed(14 DOWNTO 0);
    VARIABLE cast_52 : signed(14 DOWNTO 0);
    VARIABLE cast_53 : signed(15 DOWNTO 0);
    VARIABLE cast_54 : vector_of_signed64(0 TO 1);
    VARIABLE add_cast_54 : vector_of_signed64(0 TO 1);
    VARIABLE cast_55 : signed(14 DOWNTO 0);
    VARIABLE cast_56 : signed(14 DOWNTO 0);
    VARIABLE cast_57 : signed(15 DOWNTO 0);
    VARIABLE cast_58 : vector_of_signed64(0 TO 1);
    VARIABLE slice_cast_5 : vector_of_signed38(0 TO 1);
    VARIABLE slice_cast_6 : vector_of_signed38(0 TO 1);
    VARIABLE cast_59 : vector_of_signed64(0 TO 1);
    VARIABLE cast_60 : vector_of_signed38(0 TO 1);
    VARIABLE cast_61 : vector_of_signed64(0 TO 1);
    VARIABLE add_cast_55 : vector_of_signed64(0 TO 1);
    VARIABLE slice_cast_7 : vector_of_signed38(0 TO 1);
    VARIABLE slice_cast_8 : vector_of_signed38(0 TO 1);
    VARIABLE add_cast_56 : vector_of_signed64(0 TO 1);
    VARIABLE cast_62 : vector_of_signed38(0 TO 1);
    VARIABLE add_cast_57 : vector_of_signed64(0 TO 1);
    VARIABLE sub_cast_83 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_84 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_10 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_85 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_86 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_11 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_87 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_88 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_12 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_89 : signed(16 DOWNTO 0);
    VARIABLE sub_cast_90 : signed(16 DOWNTO 0);
    VARIABLE sub_temp_13 : signed(16 DOWNTO 0);
    VARIABLE cast_63 : signed(14 DOWNTO 0);
    VARIABLE cast_64 : signed(14 DOWNTO 0);
    VARIABLE cast_65 : signed(15 DOWNTO 0);
    VARIABLE cast_66 : vector_of_signed64(0 TO 1);
    VARIABLE add_cast_58 : vector_of_signed64(0 TO 1);
    VARIABLE cast_67 : signed(14 DOWNTO 0);
    VARIABLE cast_68 : signed(14 DOWNTO 0);
    VARIABLE cast_69 : signed(15 DOWNTO 0);
    VARIABLE cast_70 : vector_of_signed64(0 TO 1);
    VARIABLE slice_cast_9 : vector_of_signed38(0 TO 1);
    VARIABLE slice_cast_10 : vector_of_signed38(0 TO 1);
    VARIABLE cast_71 : vector_of_signed64(0 TO 1);
    VARIABLE cast_72 : vector_of_signed38(0 TO 1);
    VARIABLE cast_73 : vector_of_signed64(0 TO 1);
    VARIABLE add_cast_59 : vector_of_signed64(0 TO 1);
    VARIABLE slice_cast_11 : vector_of_signed38(0 TO 1);
    VARIABLE slice_cast_12 : vector_of_signed38(0 TO 1);
    VARIABLE add_cast_60 : vector_of_signed64(0 TO 1);
    VARIABLE cast_74 : vector_of_signed38(0 TO 1);
    VARIABLE add_cast_61 : vector_of_signed64(0 TO 1);
    VARIABLE add_temp_40 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_62 : vector_of_unsigned3(0 TO 1);
    VARIABLE add_cast_63 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_64 : vector_of_signed32(0 TO 1);
    VARIABLE fmo_7_0 : std_logic_vector(0 TO 1);
    VARIABLE add_cast_65 : vector_of_unsigned3(0 TO 1);
    VARIABLE add_temp_41 : vector_of_unsigned3(0 TO 1);
    VARIABLE add_temp_42 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_91 : vector_of_signed32(0 TO 1);
    VARIABLE cast_75 : vector_of_unsigned25(0 TO 1);
    VARIABLE sub_cast_92 : vector_of_signed32(0 TO 1);
  BEGIN
    --HDL code generation from MATLAB function: LDA_fixpt
    --disp(squar);
    --C(i,i)=0;
    s1 := (OTHERS => to_signed(16#0000#, 14));
    C := (OTHERS => to_signed(16#0000#, 14));
    t := (OTHERS => to_signed(16#0000#, 14));
    s1_0 := (OTHERS => to_signed(16#0000#, 14));
    c_0 := (OTHERS => to_signed(16#0000#, 14));
    t_0 := (OTHERS => to_signed(16#0000#, 14));
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --           Generated by MATLAB 9.4 and Fixed-Point Designer 6.1           %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --{
    --sample for class 1:
    --X1 = [4, 2;
    --      2, 4;
    --      2, 3;
    --      3, 6;
    --      4, 4];
    --sample for class 2:
    --X2 = [9, 10;
    --      6, 8;
    --      9, 5;
    --      8, 7;
    --      10, 8];
    --  %}
    --I=imread('C:\Users\Hardi\Desktop\Project-(LA_SS_CO)\Inputs\image.png');
    --M=im2bw(I)
    k2_0 := to_unsigned(16#000#, 10);
    X2 := (OTHERS => to_unsigned(16#00#, 6));
    k2 := to_unsigned(16#000#, 10);

    FOR i_0 IN 0 TO 31 LOOP
      add_temp(i_0) := to_signed(i_0 + 1, 32);
      i := unsigned(add_temp(i_0)(5 DOWNTO 0));
      add_temp_0(i_0) := to_signed(i_0 + 1, 32);
      i_1 := unsigned(add_temp_0(i_0)(5 DOWNTO 0));

      FOR j IN 0 TO 31 LOOP
        tmp_8 := k2_0 + to_unsigned(16#001#, 10);
        add_temp_1(j) := to_signed(j + 1, 32);
        tmp_9 := unsigned(add_temp_1(j)(5 DOWNTO 0));
        add_cast(j) := signed(resize(i, 32));
        sub_cast(j) := signed(resize(tmp_9, 32));
        IF M(to_integer((add_cast(j) + resize(32 * (sub_cast(j) - 1), 32)) - 1)) = '1' THEN 
          sub_cast_0(j) := signed(resize(tmp_8, 32));
          X2(to_integer(sub_cast_0(j) - 1)) := i;
          add_cast_1(j) := signed(resize(tmp_8, 32));
          X2(to_integer(add_cast_1(j) + 1023)) := tmp_9;
          k2_0 := tmp_8;
        END IF;
        add_cast_0(j) := signed(resize(i_1, 32));
        add_temp_4(j) := to_signed(j + 1, 32);
        sub_cast_1(j) := unsigned(add_temp_4(j)(5 DOWNTO 0));
        sub_cast_2(j) := signed(resize(sub_cast_1(j), 32));
        IF M(to_integer((add_cast_0(j) + resize(32 * (sub_cast_2(j) - 1), 32)) - 1)) = '1' THEN 
          k2 := k2 + to_unsigned(16#001#, 10);
        END IF;
      END LOOP;

    END LOOP;

    k1_0 := to_unsigned(16#000#, 10);
    X1 := (OTHERS => to_unsigned(16#00#, 6));
    k1 := to_unsigned(16#000#, 10);

    FOR i_3 IN 0 TO 31 LOOP
      add_temp_2(i_3) := to_signed(i_3 + 1, 32);
      i_2 := unsigned(add_temp_2(i_3)(5 DOWNTO 0));
      add_temp_3(i_3) := to_signed(i_3 + 1, 32);
      i_4 := unsigned(add_temp_3(i_3)(5 DOWNTO 0));

      FOR j_0 IN 0 TO 31 LOOP
        add_temp_5(j_0) := to_signed(j_0 + 1, 32);
        tmp_10 := unsigned(add_temp_5(j_0)(5 DOWNTO 0));
        tmp_11 := k1_0 + to_unsigned(16#001#, 10);
        add_cast_2(j_0) := signed(resize(i_2, 32));
        sub_cast_3(j_0) := signed(resize(tmp_10, 32));
        IF M(to_integer((add_cast_2(j_0) + resize(32 * (sub_cast_3(j_0) - 1), 32)) - 1)) = '0' THEN 
          sub_cast_4(j_0) := signed(resize(tmp_11, 32));
          X1(to_integer(sub_cast_4(j_0) - 1)) := i_2;
          add_cast_4(j_0) := signed(resize(tmp_11, 32));
          X1(to_integer(add_cast_4(j_0) + 1023)) := tmp_10;
          k1_0 := tmp_11;
        END IF;
        add_cast_3(j_0) := signed(resize(i_4, 32));
        add_temp_7(j_0) := to_signed(j_0 + 1, 32);
        sub_cast_5(j_0) := unsigned(add_temp_7(j_0)(5 DOWNTO 0));
        sub_cast_6(j_0) := signed(resize(sub_cast_5(j_0), 32));
        IF M(to_integer((add_cast_3(j_0) + resize(32 * (sub_cast_6(j_0) - 1), 32)) - 1)) = '0' THEN 
          k1 := k1 + to_unsigned(16#001#, 10);
        END IF;
      END LOOP;

    END LOOP;

    --disp('Mean of classes:');
    row := resize(k1, 11);
    u := (OTHERS => to_unsigned(16#0000#, 14));

    FOR i_5 IN 0 TO 1022 LOOP
      add_temp_6(i_5) := to_signed(i_5 + 1, 32);
      tmp_12 := unsigned(add_temp_6(i_5)(10 DOWNTO 0));
      cast(i_5) := signed(resize(row, 32));
      IF to_signed(i_5 + 1, 32) <= cast(i_5) THEN 

        FOR j_2 IN 0 TO 1 LOOP
          add_temp_8(j_2) := to_signed(j_2 + 1, 32);
          j_1 := unsigned(add_temp_8(j_2)(1 DOWNTO 0));
          sub_cast_7(j_2) := signed(resize(j_1, 32));
          add_cast_5(j_2) := signed(resize(tmp_12, 32));
          sub_cast_8(j_2) := signed(resize(j_1, 32));
          sub_cast_9(j_2) := signed(resize(j_1, 32));
          u(to_integer(sub_cast_7(j_2) - 1)) := resize(resize(X1(to_integer((add_cast_5(j_2) + resize(1024 * (sub_cast_8(j_2) - 1), 32)) - 1)), 15) + resize(u(to_integer(sub_cast_9(j_2) - 1)), 15), 14);
        END LOOP;

      END IF;
    END LOOP;

    IF row = to_unsigned(16#000#, 11) THEN 
      tmp := unsigned'(X"FFFFFFFFF");
    ELSE 
      IF row = 0 THEN 
        div_temp := C_divbyzero_p;
      ELSE 
        div_temp := One / row;
      END IF;
      tmp := resize(div_temp, 36);
    END IF;
    row_0 := resize(k2, 11);

    FOR t_3 IN 0 TO 1 LOOP
      mul_temp(t_3) := tmp * u(t_3);
      cast_0(t_3) := mul_temp(t_3)(37 DOWNTO 24);
      u1(t_3) := cast_0(t_3)(4 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      u_0(t_3) := to_unsigned(16#0000#, 14);
    END LOOP;


    FOR i_6 IN 0 TO 1022 LOOP
      add_temp_9(i_6) := to_signed(i_6 + 1, 32);
      tmp_13 := unsigned(add_temp_9(i_6)(10 DOWNTO 0));
      cast_1(i_6) := signed(resize(row_0, 32));
      IF to_signed(i_6 + 1, 32) <= cast_1(i_6) THEN 

        FOR j_4 IN 0 TO 1 LOOP
          add_temp_10(j_4) := to_signed(j_4 + 1, 32);
          j_3 := unsigned(add_temp_10(j_4)(1 DOWNTO 0));
          sub_cast_10(j_4) := signed(resize(j_3, 32));
          add_cast_6(j_4) := signed(resize(tmp_13, 32));
          sub_cast_11(j_4) := signed(resize(j_3, 32));
          sub_cast_12(j_4) := signed(resize(j_3, 32));
          u_0(to_integer(sub_cast_10(j_4) - 1)) := resize(resize(X2(to_integer((add_cast_6(j_4) + resize(1024 * (sub_cast_11(j_4) - 1), 32)) - 1)), 15) + resize(u_0(to_integer(sub_cast_12(j_4) - 1)), 15), 14);
        END LOOP;

      END IF;
    END LOOP;

    IF row_0 = to_unsigned(16#000#, 11) THEN 
      tmp_0 := unsigned'(X"FFFFFFFFF");
    ELSE 
      IF row_0 = 0 THEN 
        div_temp_0 := C_divbyzero_p;
      ELSE 
        div_temp_0 := One / row_0;
      END IF;
      tmp_0 := resize(div_temp_0, 36);
    END IF;
    -- disp("u1..");
    -- disp(u1);
    -- disp("u2..");
    -- disp(u2);
    -- disp('Covarience of classes:');
    --TOTCLASS=2;
    row_1 := resize(k1, 11);

    FOR t_4 IN 0 TO 1 LOOP
      mul_temp_0(t_4) := tmp_0 * u_0(t_4);
      cast_2(t_4) := mul_temp_0(t_4)(37 DOWNTO 24);
      u2(t_4) := cast_2(t_4)(4 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      v_0(t_4) := to_signed(16#0000#, 14);
    END LOOP;

    s1_1 := (OTHERS => to_signed(16#0000#, 14));

    FOR i_11 IN 0 TO 1022 LOOP
      add_temp_11(i_11) := to_signed(i_11 + 1, 32);
      tmp_14 := unsigned(add_temp_11(i_11)(10 DOWNTO 0));
      cast_3(i_11) := signed(resize(row_1, 32));
      IF to_signed(i_11 + 1, 32) <= cast_3(i_11) THEN 
        v := to_unsigned(16#1#, 2);

        FOR j_6 IN 0 TO 1 LOOP
          add_temp_12(j_6) := to_signed(j_6 + 1, 32);
          j_5 := unsigned(add_temp_12(j_6)(1 DOWNTO 0));
          sub_cast_13(j_6) := signed(resize(j_5, 32));
          add_cast_7(j_6) := signed(resize(tmp_14, 32));
          sub_cast_14(j_6) := signed(resize(j_5, 32));
          sub_cast_15(j_6) := signed(resize(X1(to_integer((add_cast_7(j_6) + resize(1024 * (sub_cast_14(j_6) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 18));
          sub_cast_16(j_6) := signed(resize(j_5, 32));
          sub_cast_17(j_6) := signed(resize(u1(to_integer(sub_cast_16(j_6) - 1)), 18));
          sub_temp(j_6) := sub_cast_15(j_6) - sub_cast_17(j_6);
          v_0(to_integer(sub_cast_13(j_6) - 1)) := sub_temp(j_6)(13 DOWNTO 0);
          t_1(j_6) := t_0(j_6);
        END LOOP;


        FOR j_7 IN 0 TO 1 LOOP
          sub_cast_18(j_7) := signed(resize(v, 32));
          sub_cast_19(j_7) := signed(resize(v, 32));
          t_1(to_integer(sub_cast_18(j_7) - 1)) := v_0(to_integer(sub_cast_19(j_7) - 1));
          v := v + to_unsigned(16#1#, 2);
        END LOOP;

        c_8 := c_0;

        FOR i_8 IN 0 TO 1 LOOP
          add_temp_14(i_8) := to_signed(i_8 + 1, 32);
          i_7 := unsigned(add_temp_14(i_8)(1 DOWNTO 0));

          FOR j_9 IN 0 TO 1 LOOP
            add_temp_15(j_9) := to_signed(j_9 + 1, 32);
            j_8 := unsigned(add_temp_15(j_9)(1 DOWNTO 0));
            add_cast_8(j_9) := signed(resize(i_7, 32));
            sub_cast_20(j_9) := signed(resize(j_8, 32));
            c_8(to_integer((add_cast_8(j_9) + resize(2 * (sub_cast_20(j_9) - 1), 32)) - 1)) := to_signed(16#0000#, 14);
            add_cast_10(j_9) := signed(resize(i_7, 32));
            sub_cast_22(j_9) := signed(resize(j_8, 32));
            sub_cast_23(j_9) := signed(resize(i_7, 32));
            sub_cast_24(j_9) := signed(resize(j_8, 32));
            mul_temp_1(j_9) := v_0(to_integer(sub_cast_23(j_9) - 1)) * t_1(to_integer(sub_cast_24(j_9) - 1));
            add_cast_11(j_9) := resize(mul_temp_1(j_9), 29);
            add_cast_12(j_9) := signed(resize(i_7, 32));
            sub_cast_25(j_9) := signed(resize(j_8, 32));
            add_cast_13(j_9) := resize(c_8(to_integer((add_cast_12(j_9) + resize(2 * (sub_cast_25(j_9) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);
            add_temp_18(j_9) := add_cast_11(j_9) + add_cast_13(j_9);
            c_8(to_integer((add_cast_10(j_9) + resize(2 * (sub_cast_22(j_9) - 1), 32)) - 1)) := add_temp_18(j_9)(27 DOWNTO 14);
          END LOOP;

        END LOOP;


        FOR t_5 IN 0 TO 3 LOOP
          m_0(t_5) := c_8(t_5)(12 DOWNTO 0) & '0';
          s1_4(t_5) := s1_0(t_5);
        END LOOP;


        FOR i_10 IN 0 TO 1 LOOP
          add_temp_16(i_10) := to_signed(i_10 + 1, 32);
          i_9 := unsigned(add_temp_16(i_10)(1 DOWNTO 0));
          add_cast_9(i_10) := signed(resize(i_9, 32));
          sub_cast_21(i_10) := signed(resize(i_9, 32));
          s1_4(to_integer((add_cast_9(i_10) + resize(2 * (sub_cast_21(i_10) - 1), 32)) - 1)) := to_signed(16#0000#, 14);

          FOR j_11 IN 0 TO 1 LOOP
            add_temp_19(j_11) := to_signed(j_11 + 1, 32);
            j_10 := unsigned(add_temp_19(j_11)(1 DOWNTO 0));
            add_cast_15(j_11) := signed(resize(i_9, 32));
            sub_cast_33(j_11) := signed(resize(j_10, 32));
            add_cast_16(j_11) := signed(resize(i_9, 32));
            sub_cast_34(j_11) := signed(resize(j_10, 32));
            add_cast_17(j_11) := resize(m_0(to_integer((add_cast_16(j_11) + resize(2 * (sub_cast_34(j_11) - 1), 32)) - 1)), 23);
            add_cast_18(j_11) := signed(resize(i_9, 32));
            sub_cast_35(j_11) := signed(resize(j_10, 32));
            add_cast_19(j_11) := resize(s1_1(to_integer((add_cast_18(j_11) + resize(2 * (sub_cast_35(j_11) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 23);
            add_temp_21(j_11) := add_cast_17(j_11) + add_cast_19(j_11);
            s1_4(to_integer((add_cast_15(j_11) + resize(2 * (sub_cast_33(j_11) - 1), 32)) - 1)) := add_temp_21(j_11)(21 DOWNTO 8);
          END LOOP;

        END LOOP;

        s1_1 := s1_4;
      END IF;
    END LOOP;

    b1 := resize(row_1, 12) - to_unsigned(16#001#, 12);

    FOR n IN 0 TO 3 LOOP
      IF to_signed(16#00000004#, 32) > (n + 1) THEN 
        tmp_15 := to_signed(n, 32);
      ELSE 
        tmp_15 := to_signed(16#00000003#, 32);
      END IF;
      IF b1 = to_unsigned(16#000#, 12) THEN 
        IF s1_1(to_integer(tmp_15)) < to_signed(16#0000#, 14) THEN 
          c_1(n) := signed'("10000000000000000000000000000000000000000000000000");
        ELSE 
          c_1(n) := signed'("01111111111111111111111111111111111111111111111111");
        END IF;
      ELSE 
        cast_4(n) := signed(resize(b1, 13));
        slice_cast(n) := s1_1(to_integer(tmp_15)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        slice_cast_0(n) := signed(resize(b1, 13));
        IF slice_cast(n)(40) = slice_cast_0(n)(12) THEN 
          slice_cast_1(n) := c_divbyzero_p_2;
        ELSE 
          slice_cast_1(n) := c_divbyzero_n_0;
        END IF;
        cast_5(n) := s1_1(to_integer(tmp_15)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        cast_6(n) := signed(resize(b1, 13));
        IF cast_4(n) = 0 THEN 
          div_temp_1(n) := slice_cast_1(n);
        ELSE 
          div_temp_1(n) := cast_5(n) / cast_6(n);
        END IF;
        c_1(n) := resize(div_temp_1(n), 50);
      END IF;
      cast_7(n) := c_1(n)(40 DOWNTO 27);
      s1_2(n) := unsigned(cast_7(n)(3 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    END LOOP;

    --TOTCLASS=2;
    row_2 := resize(k2, 11);
    v_2 := (OTHERS => to_signed(16#0000#, 14));
    s1_3 := (OTHERS => to_signed(16#0000#, 14));

    FOR i_16 IN 0 TO 1022 LOOP
      add_temp_13(i_16) := to_signed(i_16 + 1, 32);
      tmp_16 := unsigned(add_temp_13(i_16)(10 DOWNTO 0));
      cast_8(i_16) := signed(resize(row_2, 32));
      IF to_signed(i_16 + 1, 32) <= cast_8(i_16) THEN 
        v_1 := to_unsigned(16#1#, 2);

        FOR j_13 IN 0 TO 1 LOOP
          add_temp_17(j_13) := to_signed(j_13 + 1, 32);
          j_12 := unsigned(add_temp_17(j_13)(1 DOWNTO 0));
          sub_cast_26(j_13) := signed(resize(j_12, 32));
          add_cast_14(j_13) := signed(resize(tmp_16, 32));
          sub_cast_27(j_13) := signed(resize(j_12, 32));
          sub_cast_28(j_13) := signed(resize(X2(to_integer((add_cast_14(j_13) + resize(1024 * (sub_cast_27(j_13) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 18));
          sub_cast_29(j_13) := signed(resize(j_12, 32));
          sub_cast_30(j_13) := signed(resize(u2(to_integer(sub_cast_29(j_13) - 1)), 18));
          sub_temp_0(j_13) := sub_cast_28(j_13) - sub_cast_30(j_13);
          v_2(to_integer(sub_cast_26(j_13) - 1)) := sub_temp_0(j_13)(13 DOWNTO 0);
          t_2(j_13) := t(j_13);
        END LOOP;


        FOR j_14 IN 0 TO 1 LOOP
          sub_cast_31(j_14) := signed(resize(v_1, 32));
          sub_cast_32(j_14) := signed(resize(v_1, 32));
          t_2(to_integer(sub_cast_31(j_14) - 1)) := v_2(to_integer(sub_cast_32(j_14) - 1));
          v_1 := v_1 + to_unsigned(16#1#, 2);
        END LOOP;

        c_9 := C;

        FOR i_13 IN 0 TO 1 LOOP
          add_temp_22(i_13) := to_signed(i_13 + 1, 32);
          i_12 := unsigned(add_temp_22(i_13)(1 DOWNTO 0));

          FOR j_16 IN 0 TO 1 LOOP
            add_temp_25(j_16) := to_signed(j_16 + 1, 32);
            j_15 := unsigned(add_temp_25(j_16)(1 DOWNTO 0));
            add_cast_26(j_16) := signed(resize(i_12, 32));
            sub_cast_40(j_16) := signed(resize(j_15, 32));
            c_9(to_integer((add_cast_26(j_16) + resize(2 * (sub_cast_40(j_16) - 1), 32)) - 1)) := to_signed(16#0000#, 14);
            add_cast_28(j_16) := signed(resize(i_12, 32));
            sub_cast_42(j_16) := signed(resize(j_15, 32));
            sub_cast_43(j_16) := signed(resize(i_12, 32));
            sub_cast_44(j_16) := signed(resize(j_15, 32));
            mul_temp_2(j_16) := v_2(to_integer(sub_cast_43(j_16) - 1)) * t_2(to_integer(sub_cast_44(j_16) - 1));
            add_cast_29(j_16) := resize(mul_temp_2(j_16), 29);
            add_cast_30(j_16) := signed(resize(i_12, 32));
            sub_cast_45(j_16) := signed(resize(j_15, 32));
            add_cast_31(j_16) := resize(c_9(to_integer((add_cast_30(j_16) + resize(2 * (sub_cast_45(j_16) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 29);
            add_temp_27(j_16) := add_cast_29(j_16) + add_cast_31(j_16);
            c_9(to_integer((add_cast_28(j_16) + resize(2 * (sub_cast_42(j_16) - 1), 32)) - 1)) := add_temp_27(j_16)(27 DOWNTO 14);
          END LOOP;

        END LOOP;


        FOR t_6 IN 0 TO 3 LOOP
          m_1(t_6) := c_9(t_6)(12 DOWNTO 0) & '0';
          s1_5(t_6) := s1(t_6);
        END LOOP;


        FOR i_15 IN 0 TO 1 LOOP
          add_temp_26(i_15) := to_signed(i_15 + 1, 32);
          i_14 := unsigned(add_temp_26(i_15)(1 DOWNTO 0));
          add_cast_27(i_15) := signed(resize(i_14, 32));
          sub_cast_41(i_15) := signed(resize(i_14, 32));
          s1_5(to_integer((add_cast_27(i_15) + resize(2 * (sub_cast_41(i_15) - 1), 32)) - 1)) := to_signed(16#0000#, 14);

          FOR j_18 IN 0 TO 1 LOOP
            add_temp_29(j_18) := to_signed(j_18 + 1, 32);
            j_17 := unsigned(add_temp_29(j_18)(1 DOWNTO 0));
            add_cast_32(j_18) := signed(resize(i_14, 32));
            sub_cast_53(j_18) := signed(resize(j_17, 32));
            add_cast_33(j_18) := signed(resize(i_14, 32));
            sub_cast_54(j_18) := signed(resize(j_17, 32));
            add_cast_34(j_18) := resize(m_1(to_integer((add_cast_33(j_18) + resize(2 * (sub_cast_54(j_18) - 1), 32)) - 1)), 23);
            add_cast_35(j_18) := signed(resize(i_14, 32));
            sub_cast_55(j_18) := signed(resize(j_17, 32));
            add_cast_36(j_18) := resize(s1_3(to_integer((add_cast_35(j_18) + resize(2 * (sub_cast_55(j_18) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 23);
            add_temp_30(j_18) := add_cast_34(j_18) + add_cast_36(j_18);
            s1_5(to_integer((add_cast_32(j_18) + resize(2 * (sub_cast_53(j_18) - 1), 32)) - 1)) := add_temp_30(j_18)(21 DOWNTO 8);
          END LOOP;

        END LOOP;

        s1_3 := s1_5;
      END IF;
    END LOOP;

    b1_0 := resize(row_2, 12) - to_unsigned(16#001#, 12);
    -- disp("s1..");
    -- disp(s1);
    -- disp("s2..");
    -- disp(s2);   

    FOR n_0 IN 0 TO 3 LOOP
      IF to_signed(16#00000004#, 32) > (n_0 + 1) THEN 
        tmp_17 := to_signed(n_0, 32);
      ELSE 
        tmp_17 := to_signed(16#00000003#, 32);
      END IF;
      IF b1_0 = to_unsigned(16#000#, 12) THEN 
        IF s1_3(to_integer(tmp_17)) < to_signed(16#0000#, 14) THEN 
          c_2(n_0) := signed'("10000000000000000000000000000000000000000000000000");
        ELSE 
          c_2(n_0) := signed'("01111111111111111111111111111111111111111111111111");
        END IF;
      ELSE 
        cast_9(n_0) := signed(resize(b1_0, 13));
        slice_cast_2(n_0) := s1_3(to_integer(tmp_17)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        slice_cast_3(n_0) := signed(resize(b1_0, 13));
        IF slice_cast_2(n_0)(40) = slice_cast_3(n_0)(12) THEN 
          slice_cast_4(n_0) := c_divbyzero_p_2;
        ELSE 
          slice_cast_4(n_0) := c_divbyzero_n_0;
        END IF;
        cast_10(n_0) := s1_3(to_integer(tmp_17)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        cast_11(n_0) := signed(resize(b1_0, 13));
        IF cast_9(n_0) = 0 THEN 
          div_temp_2(n_0) := slice_cast_4(n_0);
        ELSE 
          div_temp_2(n_0) := cast_10(n_0) / cast_11(n_0);
        END IF;
        c_2(n_0) := resize(div_temp_2(n_0), 50);
      END IF;
      cast_12(n_0) := c_2(n_0)(40 DOWNTO 27);
      s2(n_0) := unsigned(cast_12(n_0)(3 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
      c_3(n_0) := to_signed(16#0000#, 14);
    END LOOP;


    FOR i_18 IN 0 TO 1 LOOP
      add_temp_20(i_18) := to_signed(i_18 + 1, 32);
      i_17 := unsigned(add_temp_20(i_18)(1 DOWNTO 0));
      add_cast_20(i_18) := signed(resize(i_17, 32));
      sub_cast_36(i_18) := signed(resize(i_17, 32));
      c_3(to_integer((add_cast_20(i_18) + resize(2 * (sub_cast_36(i_18) - 1), 32)) - 1)) := to_signed(16#0000#, 14);

      FOR j_20 IN 0 TO 1 LOOP
        add_temp_23(j_20) := to_signed(j_20 + 1, 32);
        j_19 := unsigned(add_temp_23(j_20)(1 DOWNTO 0));
        add_cast_21(j_20) := signed(resize(i_17, 32));
        sub_cast_37(j_20) := signed(resize(j_19, 32));
        add_cast_22(j_20) := signed(resize(i_17, 32));
        sub_cast_38(j_20) := signed(resize(j_19, 32));
        add_cast_23(j_20) := resize(s1_2(to_integer((add_cast_22(j_20) + resize(2 * (sub_cast_38(j_20) - 1), 32)) - 1)), 15);
        add_cast_24(j_20) := signed(resize(i_17, 32));
        sub_cast_39(j_20) := signed(resize(j_19, 32));
        add_cast_25(j_20) := resize(s2(to_integer((add_cast_24(j_20) + resize(2 * (sub_cast_39(j_20) - 1), 32)) - 1)), 15);
        add_temp_24(j_20) := add_cast_23(j_20) + add_cast_25(j_20);
        c_3(to_integer((add_cast_21(j_20) + resize(2 * (sub_cast_37(j_20) - 1), 32)) - 1)) := signed(resize(add_temp_24(j_20)(14 DOWNTO 10), 14));
      END LOOP;

    END LOOP;


    FOR t_7 IN 0 TO 3 LOOP
      sw(t_7) := unsigned(c_3(t_7)(4 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    END LOOP;

    -- disp("Within Class - sw..");
    -- disp(sw);   
    c_4 := (OTHERS => to_signed(16#00#, 5));
    v_3 := to_unsigned(16#1#, 2);

    FOR i_20 IN 0 TO 1 LOOP
      add_temp_28(i_20) := to_signed(i_20 + 1, 32);
      i_19 := unsigned(add_temp_28(i_20)(1 DOWNTO 0));
      sub_cast_46(i_20) := signed(resize(i_19, 32));
      sub_cast_47(i_20) := signed(resize(i_19, 32));
      sub_cast_48(i_20) := signed(resize(u1(to_integer(sub_cast_47(i_20) - 1)), 17));
      sub_cast_49(i_20) := signed(resize(i_19, 32));
      sub_cast_50(i_20) := signed(resize(u2(to_integer(sub_cast_49(i_20) - 1)), 17));
      sub_temp_1(i_20) := sub_cast_48(i_20) - sub_cast_50(i_20);
      c_4(to_integer(sub_cast_46(i_20) - 1)) := sub_temp_1(i_20)(13 DOWNTO 9);
      Y(i_20) := to_signed(16#0000#, 14);
    END LOOP;


    FOR j_21 IN 0 TO 1 LOOP
      sub_cast_51(j_21) := signed(resize(v_3, 32));
      sub_cast_52(j_21) := signed(resize(v_3, 32));
      Y(to_integer(sub_cast_51(j_21) - 1)) := c_4(to_integer(sub_cast_52(j_21) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
      v_3 := v_3 + to_unsigned(16#1#, 2);
    END LOOP;


    FOR t_8 IN 0 TO 1 LOOP
      sb2(t_8) := Y(t_8)(13 DOWNTO 9);
    END LOOP;

    c_5 := (OTHERS => to_signed(16#0000#, 14));

    FOR i_22 IN 0 TO 1 LOOP
      add_temp_31(i_22) := to_signed(i_22 + 1, 32);
      i_21 := unsigned(add_temp_31(i_22)(1 DOWNTO 0));

      FOR j_23 IN 0 TO 1 LOOP
        add_temp_32(j_23) := to_signed(j_23 + 1, 32);
        j_22 := unsigned(add_temp_32(j_23)(1 DOWNTO 0));
        add_cast_37(j_23) := signed(resize(i_21, 32));
        sub_cast_56(j_23) := signed(resize(j_22, 32));
        c_5(to_integer((add_cast_37(j_23) + resize(2 * (sub_cast_56(j_23) - 1), 32)) - 1)) := to_signed(16#0000#, 14);
        add_cast_38(j_23) := signed(resize(i_21, 32));
        sub_cast_57(j_23) := signed(resize(j_22, 32));
        sub_cast_58(j_23) := signed(resize(i_21, 32));
        sub_cast_59(j_23) := signed(resize(j_22, 32));
        mul_temp_3(j_23) := c_4(to_integer(sub_cast_58(j_23) - 1)) * sb2(to_integer(sub_cast_59(j_23) - 1));
        add_cast_39(j_23) := resize(mul_temp_3(j_23) & '0' & '0' & '0' & '0', 15);
        add_cast_40(j_23) := signed(resize(i_21, 32));
        sub_cast_60(j_23) := signed(resize(j_22, 32));
        add_cast_41(j_23) := resize(c_5(to_integer((add_cast_40(j_23) + resize(2 * (sub_cast_60(j_23) - 1), 32)) - 1)), 15);
        add_temp_33(j_23) := add_cast_39(j_23) + add_cast_41(j_23);
        c_5(to_integer((add_cast_38(j_23) + resize(2 * (sub_cast_57(j_23) - 1), 32)) - 1)) := add_temp_33(j_23)(13 DOWNTO 0);
      END LOOP;

    END LOOP;

    -- disp("Between Class - sb..");
    -- disp(sb);
    -- inverse for 2*2 matrix

    FOR t_9 IN 0 TO 3 LOOP
      sb(t_9) := unsigned(c_5(t_9)(12 DOWNTO 4));
      A(t_9) := to_unsigned(16#0000#, 14);
    END LOOP;

    A(0) := sw(3);
    cast_13 := sw(0)(11 DOWNTO 0) & '0' & '0';
    A(3) := resize(cast_13(13 DOWNTO 2), 14);
    a_0 := A;
    cast_14 := signed(resize(sw(2), 15));
    cast_15 :=  - (cast_14);
    cast_16 := resize(cast_15, 16);
    a_0(2) := unsigned(cast_16(13 DOWNTO 0));
    cast_17 := signed(resize(sw(1), 15));
    cast_18 :=  - (cast_17);
    cast_19 := resize(cast_18, 16);
    a_0(1) := unsigned(cast_19(13 DOWNTO 0));
    mul_temp_4 := sw(3) * A(3);
    sub_cast_61 := resize(mul_temp_4, 29);
    cast_20 := signed(resize(sw(2), 15));
    cast_21 :=  - (cast_20);
    cast_22 := resize(cast_21, 16);
    cast_23 := unsigned(cast_22(13 DOWNTO 0));
    cast_24 := signed(resize(sw(1), 15));
    cast_25 :=  - (cast_24);
    cast_26 := resize(cast_25, 16);
    cast_27 := unsigned(cast_26(13 DOWNTO 0));
    mul_temp_5 := cast_23 * cast_27;
    sub_cast_62 := resize(mul_temp_5, 29);
    sub_temp_2 := sub_cast_61 - sub_cast_62;
    d := sub_temp_2(24 DOWNTO 11);
    -- disp("Inverse of sw..");
    -- disp(swi);

    FOR n_1 IN 0 TO 3 LOOP
      IF to_signed(16#00000004#, 32) > (n_1 + 1) THEN 
        tmp_18 := to_signed(n_1, 32);
      ELSE 
        tmp_18 := to_signed(16#00000003#, 32);
      END IF;
      IF d = to_unsigned(16#0000#, 14) THEN 
        c_6(n_1) := unsigned'("1111111111111111111111111111111111111111111111");
      ELSE 
        cast_31(n_1) := a_0(to_integer(tmp_18)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF d = 0 THEN 
          div_temp_3(n_1) := c_divbyzero_p_1_1;
        ELSE 
          div_temp_3(n_1) := cast_31(n_1) / d;
        END IF;
        c_6(n_1) := resize(div_temp_3(n_1), 46);
      END IF;
      cast_36(n_1) := c_6(n_1)(31 DOWNTO 18);
      swi(n_1) := unsigned'(cast_36(n_1)(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
      c_7(n_1) := to_unsigned(16#0000#, 14);
    END LOOP;


    FOR i_24 IN 0 TO 1 LOOP
      add_temp_34(i_24) := to_signed(i_24 + 1, 32);
      i_23 := unsigned(add_temp_34(i_24)(1 DOWNTO 0));

      FOR j_25 IN 0 TO 1 LOOP
        add_temp_36(j_25) := to_signed(j_25 + 1, 32);
        j_24 := unsigned(add_temp_36(j_25)(1 DOWNTO 0));
        add_cast_44(j_25) := signed(resize(i_23, 32));
        sub_cast_67(j_25) := signed(resize(j_24, 32));
        c_7(to_integer((add_cast_44(j_25) + resize(2 * (sub_cast_67(j_25) - 1), 32)) - 1)) := to_unsigned(16#0000#, 14);

        FOR k_0 IN 0 TO 1 LOOP
          add_temp_37(k_0) := to_signed(k_0 + 1, 32);
          k := unsigned(add_temp_37(k_0)(1 DOWNTO 0));
          add_cast_45(k_0) := signed(resize(i_23, 32));
          sub_cast_68(k_0) := signed(resize(j_24, 32));
          add_cast_46(k_0) := signed(resize(i_23, 32));
          sub_cast_69(k_0) := signed(resize(k, 32));
          add_cast_47(k_0) := signed(resize(k, 32));
          sub_cast_70(k_0) := signed(resize(j_24, 32));
          mul_temp_9(k_0) := swi(to_integer((add_cast_46(k_0) + resize(2 * (sub_cast_69(k_0) - 1), 32)) - 1)) * sb(to_integer((add_cast_47(k_0) + resize(2 * (sub_cast_70(k_0) - 1), 32)) - 1));
          add_cast_48(k_0) := resize(mul_temp_9(k_0), 24);
          add_cast_49(k_0) := signed(resize(i_23, 32));
          sub_cast_71(k_0) := signed(resize(j_24, 32));
          add_cast_50(k_0) := resize(c_7(to_integer((add_cast_49(k_0) + resize(2 * (sub_cast_71(k_0) - 1), 32)) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 24);
          add_temp_38(k_0) := add_cast_48(k_0) + add_cast_50(k_0);
          c_7(to_integer((add_cast_45(k_0) + resize(2 * (sub_cast_68(k_0) - 1), 32)) - 1)) := add_temp_38(k_0)(21 DOWNTO 8);
        END LOOP;

      END LOOP;

    END LOOP;

    -- disp("swisb..");
    -- disp(swisb);
    add_cast_42 := resize(c_7(0), 15);
    add_cast_43 := resize(c_7(3), 15);
    add_temp_35 := add_cast_42 + add_cast_43;
    cast_28 := signed(resize(add_temp_35, 16));
    cast_29 :=  - (cast_28);
    cast_30 := resize(cast_29, 17);
    b := cast_30(14 DOWNTO 1);
    cast_32 := resize(b, 15);
    cast_33 :=  - (cast_32);
    a1 := resize(cast_33, 16);
    mul_temp_6 := b * b;
    sub_cast_63 := resize(mul_temp_6, 30);
    mul_temp_7 := c_7(0) * c_7(3);
    sub_cast_64 := resize(mul_temp_7, 29);
    mul_temp_8 := c_7(2) * c_7(1);
    sub_cast_65 := resize(mul_temp_8, 29);
    sub_temp_3 := sub_cast_64 - sub_cast_65;
    cast_34 := sub_temp_3(22);
    IF cast_34 = '1' THEN 
      cast_35 := to_unsigned(16#4#, 5);
    ELSE 
      cast_35 := to_unsigned(16#0#, 5);
    END IF;
    sub_cast_66 := signed(resize(cast_35 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 30));
    sub_temp_4 := sub_cast_63 - sub_cast_66;
    d_0 := unsigned(sub_temp_4(25 DOWNTO 12));
    IF d_0 = to_unsigned(16#0000#, 14) THEN 
      y_0 := to_unsigned(16#00#, 7);
    ELSE 
      y_0 := to_unsigned(16#00#, 7);

      FOR i_25 IN 6 DOWNTO 0 LOOP
        cast_37(i_25) := unsigned(to_signed(i_25, 32)(7 DOWNTO 0));
        sll_temp(i_25) := to_unsigned(16#01#, 7) sll to_integer(cast_37(i_25));
        ytemp := y_0 OR sll_temp(i_25);
        mul_temp_10(i_25) := ytemp * ytemp;
        IF mul_temp_10(i_25) <= d_0 THEN 
          y_0 := ytemp;
        END IF;
      END LOOP;

    END IF;
    d_1 := resize(y_0 & '0' & '0' & '0' & '0', 14);
    IF d_1 > to_unsigned(16#0000#, 14) THEN 
      cast_41 := resize(b, 15);
      cast_42 :=  - (cast_41);
      sub_cast_72 := resize(cast_42, 16);
      sub_cast_73 := resize(sub_cast_72, 18);
      sub_cast_74 := signed(resize(d_1 & '0' & '0', 18));
      sub_temp_5 := sub_cast_73 - sub_cast_74;
      cast_43 := resize(sub_temp_5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 35);
      cast_44 := cast_43 srl 1;
      tmp_2 := cast_44(24);
    ELSE 
      cast_38 := resize(a1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 33);
      cast_39 := cast_38 srl 1;
      cast_40 := unsigned(cast_39(26 DOWNTO 13));
      tmp_2 := cast_40(11);
    END IF;
    IF d_1 > to_unsigned(16#0000#, 14) THEN 
      cast_47 := resize(b, 15);
      cast_48 :=  - (cast_47);
      add_cast_51 := resize(cast_48, 16);
      add_cast_52 := resize(add_cast_51, 18);
      add_cast_53 := signed(resize(d_1 & '0' & '0', 18));
      add_temp_39 := add_cast_52 + add_cast_53;
      cast_49 := resize(add_temp_39 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 35);
      cast_50 := cast_49 srl 1;
      tmp_1 := unsigned(cast_50(26 DOWNTO 13));
    ELSE 
      cast_45 := resize(a1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 33);
      cast_46 := cast_45 srl 1;
      tmp_1 := unsigned(cast_46(26 DOWNTO 13));
    END IF;
    --  A=[6.0118         0;
    --          0         0];
    --  
    --   lemda=6.0118;

    FOR t_10 IN 0 TO 3 LOOP
      a_1(t_10) := signed(resize(c_7(t_10)(13 DOWNTO 1), 14));
      a_2(t_10) := a_1(t_10);
    END LOOP;

    sub_cast_75 := resize(a_1(0) & '0', 17);
    sub_cast_76 := signed(resize(tmp_1, 17));
    sub_temp_6 := sub_cast_75 - sub_cast_76;
    tmp_3 := sub_temp_6(14 DOWNTO 1);
    sub_cast_77 := resize(a_1(0) & '0', 17);
    sub_cast_78 := signed(resize(tmp_1, 17));
    sub_temp_7 := sub_cast_77 - sub_cast_78;
    a_2(0) := sub_temp_7(14 DOWNTO 1);
    sub_cast_79 := resize(a_1(3) & '0', 17);
    sub_cast_80 := signed(resize(tmp_1, 17));
    sub_temp_8 := sub_cast_79 - sub_cast_80;
    tmp_4 := sub_temp_8(14 DOWNTO 1);
    sub_cast_81 := resize(a_1(3) & '0', 17);
    sub_cast_82 := signed(resize(tmp_1, 17));
    sub_temp_9 := sub_cast_81 - sub_cast_82;
    a_2(3) := sub_temp_9(14 DOWNTO 1);
    IF tmp_3 = to_signed(16#0000#, 14) THEN 

      FOR n_3 IN 0 TO 1 LOOP
        IF to_signed(16#00000002#, 32) > (n_3 + 1) THEN 
          tmp_20 := to_signed(n_3, 32);
        ELSE 
          tmp_20 := to_signed(16#00000001#, 32);
        END IF;
        IF tmp_4 = to_signed(16#0000#, 14) THEN 
          add_cast_57(n_3) := resize(tmp_20 & '0', 64);
          IF a_2(to_integer(1 + resize(add_cast_57(n_3), 32))) < to_signed(16#0000#, 14) THEN 
            c_11(n_3) := signed'("100000000000000000000000000000000000000000");
          ELSE 
            c_11(n_3) := signed'("011111111111111111111111111111111111111111");
          END IF;
        ELSE 
          add_cast_55(n_3) := resize(tmp_20 & '0', 64);
          slice_cast_7(n_3) := a_2(to_integer(1 + resize(add_cast_55(n_3), 32))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF slice_cast_7(n_3)(37) = tmp_4(13) THEN 
            slice_cast_8(n_3) := c_divbyzero_p_0;
          ELSE 
            slice_cast_8(n_3) := C_divbyzero_n;
          END IF;
          add_cast_56(n_3) := resize(tmp_20 & '0', 64);
          cast_62(n_3) := a_2(to_integer(1 + resize(add_cast_56(n_3), 32))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF tmp_4 = 0 THEN 
            div_temp_5(n_3) := slice_cast_8(n_3);
          ELSE 
            div_temp_5(n_3) := cast_62(n_3) / tmp_4;
          END IF;
          c_11(n_3) := resize(div_temp_5(n_3), 42);
        END IF;
      END LOOP;


      FOR t_12 IN 0 TO 1 LOOP
        add_cast_54(t_12) := resize(to_signed(t_12, 32) & '0', 64);
        a_2(to_integer(1 + resize(add_cast_54(t_12), 32))) := c_11(t_12)(27 DOWNTO 14);
      END LOOP;

      w_0(0) := a_2(3)(10);
      cast_55 := resize(a_2(1), 15);
      cast_56 :=  - (cast_55);
      cast_57 := resize(cast_56, 16);
      w_0(1) := cast_57(10);
    ELSE 

      FOR n_2 IN 0 TO 1 LOOP
        IF to_signed(16#00000002#, 32) > (n_2 + 1) THEN 
          tmp_19 := to_signed(n_2, 32);
        ELSE 
          tmp_19 := to_signed(16#00000001#, 32);
        END IF;
        IF tmp_3 = to_signed(16#0000#, 14) THEN 
          cast_61(n_2) := resize(tmp_19 & '0', 64);
          IF a_2(to_integer(resize(cast_61(n_2), 31))) < to_signed(16#0000#, 14) THEN 
            c_10(n_2) := signed'("100000000000000000000000000000000000000000");
          ELSE 
            c_10(n_2) := signed'("011111111111111111111111111111111111111111");
          END IF;
        ELSE 
          cast_58(n_2) := resize(tmp_19 & '0', 64);
          slice_cast_5(n_2) := a_2(to_integer(resize(cast_58(n_2), 31))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF slice_cast_5(n_2)(37) = tmp_3(13) THEN 
            slice_cast_6(n_2) := c_divbyzero_p_0;
          ELSE 
            slice_cast_6(n_2) := C_divbyzero_n;
          END IF;
          cast_59(n_2) := resize(tmp_19 & '0', 64);
          cast_60(n_2) := a_2(to_integer(resize(cast_59(n_2), 31))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF tmp_3 = 0 THEN 
            div_temp_4(n_2) := slice_cast_6(n_2);
          ELSE 
            div_temp_4(n_2) := cast_60(n_2) / tmp_3;
          END IF;
          c_10(n_2) := resize(div_temp_4(n_2), 42);
        END IF;
      END LOOP;


      FOR t_11 IN 0 TO 1 LOOP
        cast_54(t_11) := resize(to_signed(t_11, 32) & '0', 64);
        a_2(to_integer(resize(cast_54(t_11), 31))) := c_10(t_11)(27 DOWNTO 14);
      END LOOP;

      cast_51 := resize(a_2(2), 15);
      cast_52 :=  - (cast_51);
      cast_53 := resize(cast_52, 16);
      w_0(0) := cast_53(10);
      w_0(1) := a_2(0)(10);
    END IF;
    fmo_7 := (OTHERS => '0');
    fmo_7(0 TO 1) := w_0(0 TO 1);
    --  A=[6.0118         0;
    --          0         0];
    --  
    --   lemda=6.0118;

    FOR t_13 IN 0 TO 3 LOOP
      a_3(t_13) := signed(resize(c_7(t_13)(13 DOWNTO 1), 14));
      a_4(t_13) := a_3(t_13);
    END LOOP;

    sub_cast_83 := resize(a_3(0) & '0', 17);
    sub_cast_84 := signed(resize(unsigned'(tmp_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'), 17));
    sub_temp_10 := sub_cast_83 - sub_cast_84;
    tmp_5 := sub_temp_10(14 DOWNTO 1);
    sub_cast_85 := resize(a_3(0) & '0', 17);
    sub_cast_86 := signed(resize(unsigned'(tmp_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'), 17));
    sub_temp_11 := sub_cast_85 - sub_cast_86;
    a_4(0) := sub_temp_11(14 DOWNTO 1);
    sub_cast_87 := resize(a_3(3) & '0', 17);
    sub_cast_88 := signed(resize(unsigned'(tmp_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'), 17));
    sub_temp_12 := sub_cast_87 - sub_cast_88;
    tmp_6 := sub_temp_12(14 DOWNTO 1);
    sub_cast_89 := resize(a_3(3) & '0', 17);
    sub_cast_90 := signed(resize(unsigned'(tmp_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'), 17));
    sub_temp_13 := sub_cast_89 - sub_cast_90;
    a_4(3) := sub_temp_13(14 DOWNTO 1);
    IF tmp_5 = to_signed(16#0000#, 14) THEN 

      FOR n_5 IN 0 TO 1 LOOP
        IF to_signed(16#00000002#, 32) > (n_5 + 1) THEN 
          tmp_22 := to_signed(n_5, 32);
        ELSE 
          tmp_22 := to_signed(16#00000001#, 32);
        END IF;
        IF tmp_6 = to_signed(16#0000#, 14) THEN 
          add_cast_61(n_5) := resize(tmp_22 & '0', 64);
          IF a_4(to_integer(1 + resize(add_cast_61(n_5), 32))) < to_signed(16#0000#, 14) THEN 
            c_13(n_5) := signed'("100000000000000000000000000000000000000000");
          ELSE 
            c_13(n_5) := signed'("011111111111111111111111111111111111111111");
          END IF;
        ELSE 
          add_cast_59(n_5) := resize(tmp_22 & '0', 64);
          slice_cast_11(n_5) := a_4(to_integer(1 + resize(add_cast_59(n_5), 32))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF slice_cast_11(n_5)(37) = tmp_6(13) THEN 
            slice_cast_12(n_5) := c_divbyzero_p_0;
          ELSE 
            slice_cast_12(n_5) := C_divbyzero_n;
          END IF;
          add_cast_60(n_5) := resize(tmp_22 & '0', 64);
          cast_74(n_5) := a_4(to_integer(1 + resize(add_cast_60(n_5), 32))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF tmp_6 = 0 THEN 
            div_temp_7(n_5) := slice_cast_12(n_5);
          ELSE 
            div_temp_7(n_5) := cast_74(n_5) / tmp_6;
          END IF;
          c_13(n_5) := resize(div_temp_7(n_5), 42);
        END IF;
      END LOOP;


      FOR t_15 IN 0 TO 1 LOOP
        add_cast_58(t_15) := resize(to_signed(t_15, 32) & '0', 64);
        a_4(to_integer(1 + resize(add_cast_58(t_15), 32))) := c_13(t_15)(27 DOWNTO 14);
      END LOOP;

      w_1(0) := a_4(3)(10);
      cast_67 := resize(a_4(1), 15);
      cast_68 :=  - (cast_67);
      cast_69 := resize(cast_68, 16);
      w_1(1) := cast_69(10);
    ELSE 

      FOR n_4 IN 0 TO 1 LOOP
        IF to_signed(16#00000002#, 32) > (n_4 + 1) THEN 
          tmp_21 := to_signed(n_4, 32);
        ELSE 
          tmp_21 := to_signed(16#00000001#, 32);
        END IF;
        IF tmp_5 = to_signed(16#0000#, 14) THEN 
          cast_73(n_4) := resize(tmp_21 & '0', 64);
          IF a_4(to_integer(resize(cast_73(n_4), 31))) < to_signed(16#0000#, 14) THEN 
            c_12(n_4) := signed'("100000000000000000000000000000000000000000");
          ELSE 
            c_12(n_4) := signed'("011111111111111111111111111111111111111111");
          END IF;
        ELSE 
          cast_70(n_4) := resize(tmp_21 & '0', 64);
          slice_cast_9(n_4) := a_4(to_integer(resize(cast_70(n_4), 31))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF slice_cast_9(n_4)(37) = tmp_5(13) THEN 
            slice_cast_10(n_4) := c_divbyzero_p_0;
          ELSE 
            slice_cast_10(n_4) := C_divbyzero_n;
          END IF;
          cast_71(n_4) := resize(tmp_21 & '0', 64);
          cast_72(n_4) := a_4(to_integer(resize(cast_71(n_4), 31))) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
          IF tmp_5 = 0 THEN 
            div_temp_6(n_4) := slice_cast_10(n_4);
          ELSE 
            div_temp_6(n_4) := cast_72(n_4) / tmp_5;
          END IF;
          c_12(n_4) := resize(div_temp_6(n_4), 42);
        END IF;
      END LOOP;


      FOR t_14 IN 0 TO 1 LOOP
        cast_66(t_14) := resize(to_signed(t_14, 32) & '0', 64);
        a_4(to_integer(resize(cast_66(t_14), 31))) := c_12(t_14)(27 DOWNTO 14);
      END LOOP;

      cast_63 := resize(a_4(2), 15);
      cast_64 :=  - (cast_63);
      cast_65 := resize(cast_64, 16);
      w_1(0) := cast_65(10);
      w_1(1) := a_4(0)(10);
    END IF;
    fmo_7(2 TO 3) := w_1(0 TO 1);
    -- disp("D......")
    -- disp(D)
    -- disp("V......")
    -- disp(V)
    squar := '0';

    FOR i_27 IN 0 TO 1 LOOP
      add_temp_40(i_27) := to_signed(i_27 + 1, 32);
      i_26 := unsigned(add_temp_40(i_27)(1 DOWNTO 0));
      add_cast_62(i_27) := '0' & '0' & squar;
      add_cast_63(i_27) := signed(resize(i_26, 32));
      add_cast_64(i_27) := signed(resize(i_26, 32));
      IF fmo_7(to_integer(add_cast_63(i_27) + 1)) = '1' THEN 
        fmo_7_0(i_27) := fmo_7(to_integer(add_cast_64(i_27) + 1));
      ELSE 
        fmo_7_0(i_27) := '0';
      END IF;
      add_cast_65(i_27) := '0' & '0' & fmo_7_0(i_27);
      add_temp_41(i_27) := add_cast_62(i_27) + add_cast_65(i_27);
      squar := add_temp_41(i_27)(0);
    END LOOP;

    IF (( NOT squar) OR ( NOT '0')) = '1' THEN 
      tmp_7 := '1';
    ELSE 
      tmp_7 := '0';
    END IF;
    -- disp(squar);
    -- disp(squarroot);
    w1(0 TO 1) := fmo_7(2 TO 3);

    FOR i_29 IN 0 TO 1 LOOP
      add_temp_42(i_29) := to_signed(i_29 + 1, 32);
      i_28 := unsigned(add_temp_42(i_29)(1 DOWNTO 0));
      IF tmp_7 = '0' THEN 
        tmp_23 := to_unsigned(16#3FFFFFF#, 26);
      ELSE 
        sub_cast_91(i_29) := signed(resize(i_28, 32));
        cast_75(i_29) := unsigned'(w1(to_integer(sub_cast_91(i_29) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
        IF tmp_7 = '0' THEN 
          div_temp_8(i_29) := C_divbyzero_p;
        ELSE 
          div_temp_8(i_29) := cast_75(i_29) / unsigned'('0' & tmp_7);
        END IF;
        tmp_23 := resize(div_temp_8(i_29), 26);
      END IF;
      sub_cast_92(i_29) := signed(resize(i_28, 32));
      w1(to_integer(sub_cast_92(i_29) - 1)) := tmp_23(24);
    END LOOP;

    --meanDiff = Substaction(u1,u2);
    --w1 = Multiplication(swi,temp);
    --w1=[0.9088;0.4173];
    -- disp("Most impoert eigenVector")
    -- disp(w)
    --{
    --
    --
    --disp("other")
    --disp(w1)
    --w2=[0.9088;0.4173]
    --wsmall = [-0.5755;0.8178]
    --
    --title("LDA projection with highest eigen value");
    --{
    --scatter(X1(:,1),X1(:,2),100,'filled')
    --hold on
    --scatter(X2(:,1),X2(:,2),100,'filled')
    --hold on
    --
    --title("LDA");
    --xlabel("X-axis")
    --ylabel("y-axis")
    --}
    --
    --legend("X1","X2") ;
    --plot(w,'r')
    --hold on
    --
    --plot(w,'b')
    --
    --hold on
    --plot(w2,'g')
    --hold on
    --plot(wsmall,'y')
    --
    --
    --[r,c]=size(w);
    --
    --k=1;
    --for i=1:row1
    --  
    --  Xn(k)=0;
    --  
    --  %for j=1:r
    --    Xn(k) =Multiplication(X1(i,:), w);
    --  %end
    --  hold on
    --  %scatter(Xn(k),Xn(k),'g')
    --  k=k+1;
    --end
    --
    --for i=1:row2
    --  Xn(k)=0;
    --  %for j=1:r
    --    Xn(k) = Multiplication(X2(i,:), w);
    --  %end
    --  %scatter(Xn(k),Xn(k),'k')
    --  k=k+1;
    --end
    --
    --plot(Xn,Xn);
    --scatter(Xn(1:row1),Xn(1:row1)*[0],100,'g');
    --
    --scatter(Xn(row1+1:row1+row2),Xn(row1+1:row1+row2)*[0],100,'k');
    --legend("X1","X2","LDA","X1-projection","X2-projection")
    --legend("X1-projection","X2-projection")
    --
    --
    --}
    w <= w1;
    WAIT;
  END PROCESS LDA_fixpt_1_output;


END rtl;

